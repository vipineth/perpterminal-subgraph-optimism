// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OnReferralCodeCreated extends ethereum.Event {
  get params(): OnReferralCodeCreated__Params {
    return new OnReferralCodeCreated__Params(this);
  }
}

export class OnReferralCodeCreated__Params {
  _event: OnReferralCodeCreated;

  constructor(event: OnReferralCodeCreated) {
    this._event = event;
  }

  get createdBy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get createdFor(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get referralCode(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class OnReferralCodeUpserted extends ethereum.Event {
  get params(): OnReferralCodeUpserted__Params {
    return new OnReferralCodeUpserted__Params(this);
  }
}

export class OnReferralCodeUpserted__Params {
  _event: OnReferralCodeUpserted;

  constructor(event: OnReferralCodeUpserted) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get action(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get newReferralCode(): string {
    return this._event.parameters[3].value.toString();
  }

  get oldReferralCode(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class OnUncappedPartnerAssigned extends ethereum.Event {
  get params(): OnUncappedPartnerAssigned__Params {
    return new OnUncappedPartnerAssigned__Params(this);
  }
}

export class OnUncappedPartnerAssigned__Params {
  _event: OnUncappedPartnerAssigned;

  constructor(event: OnUncappedPartnerAssigned) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tier(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class OnUncappedPartnerRemoved extends ethereum.Event {
  get params(): OnUncappedPartnerRemoved__Params {
    return new OnUncappedPartnerRemoved__Params(this);
  }
}

export class OnUncappedPartnerRemoved__Params {
  _event: OnUncappedPartnerRemoved;

  constructor(event: OnUncappedPartnerRemoved) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Referrer__partnersResult {
  value0: BigInt;
  value1: string;
  value2: Address;

  constructor(value0: BigInt, value1: string, value2: Address) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    return map;
  }
}

export class Referrer__tradersResult {
  value0: string;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: string, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }
}

export class Referrer extends ethereum.SmartContract {
  static bind(address: Address): Referrer {
    return new Referrer("Referrer", address);
  }

  candidate(): Address {
    let result = super.call("candidate", "candidate():(address)", []);

    return result[0].toAddress();
  }

  try_candidate(): ethereum.CallResult<Address> {
    let result = super.tryCall("candidate", "candidate():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getMyRefereeCode(): string {
    let result = super.call(
      "getMyRefereeCode",
      "getMyRefereeCode():(string)",
      []
    );

    return result[0].toString();
  }

  try_getMyRefereeCode(): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getMyRefereeCode",
      "getMyRefereeCode():(string)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getReferralCodeByPartnerAddress(partnerAddress: Address): string {
    let result = super.call(
      "getReferralCodeByPartnerAddress",
      "getReferralCodeByPartnerAddress(address):(string)",
      [ethereum.Value.fromAddress(partnerAddress)]
    );

    return result[0].toString();
  }

  try_getReferralCodeByPartnerAddress(
    partnerAddress: Address
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getReferralCodeByPartnerAddress",
      "getReferralCodeByPartnerAddress(address):(string)",
      [ethereum.Value.fromAddress(partnerAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  partners(param0: Address): Referrer__partnersResult {
    let result = super.call(
      "partners",
      "partners(address):(uint256,string,address)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Referrer__partnersResult(
      result[0].toBigInt(),
      result[1].toString(),
      result[2].toAddress()
    );
  }

  try_partners(param0: Address): ethereum.CallResult<Referrer__partnersResult> {
    let result = super.tryCall(
      "partners",
      "partners(address):(uint256,string,address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Referrer__partnersResult(
        value[0].toBigInt(),
        value[1].toString(),
        value[2].toAddress()
      )
    );
  }

  referralCodeToPartnerMap(param0: string): Address {
    let result = super.call(
      "referralCodeToPartnerMap",
      "referralCodeToPartnerMap(string):(address)",
      [ethereum.Value.fromString(param0)]
    );

    return result[0].toAddress();
  }

  try_referralCodeToPartnerMap(param0: string): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "referralCodeToPartnerMap",
      "referralCodeToPartnerMap(string):(address)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  traders(param0: Address): Referrer__tradersResult {
    let result = super.call(
      "traders",
      "traders(address):(string,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Referrer__tradersResult(
      result[0].toString(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_traders(param0: Address): ethereum.CallResult<Referrer__tradersResult> {
    let result = super.tryCall(
      "traders",
      "traders(address):(string,uint256,uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Referrer__tradersResult(
        value[0].toString(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  uncappedPartners(param0: Address): string {
    let result = super.call(
      "uncappedPartners",
      "uncappedPartners(address):(string)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toString();
  }

  try_uncappedPartners(param0: Address): ethereum.CallResult<string> {
    let result = super.tryCall(
      "uncappedPartners",
      "uncappedPartners(address):(string)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class _batchUpdateUncappedPartnerCall extends ethereum.Call {
  get inputs(): _batchUpdateUncappedPartnerCall__Inputs {
    return new _batchUpdateUncappedPartnerCall__Inputs(this);
  }

  get outputs(): _batchUpdateUncappedPartnerCall__Outputs {
    return new _batchUpdateUncappedPartnerCall__Outputs(this);
  }
}

export class _batchUpdateUncappedPartnerCall__Inputs {
  _call: _batchUpdateUncappedPartnerCall;

  constructor(call: _batchUpdateUncappedPartnerCall) {
    this._call = call;
  }

  get partnerAddresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get tiers(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }
}

export class _batchUpdateUncappedPartnerCall__Outputs {
  _call: _batchUpdateUncappedPartnerCall;

  constructor(call: _batchUpdateUncappedPartnerCall) {
    this._call = call;
  }
}

export class _importPartnerCall extends ethereum.Call {
  get inputs(): _importPartnerCall__Inputs {
    return new _importPartnerCall__Inputs(this);
  }

  get outputs(): _importPartnerCall__Outputs {
    return new _importPartnerCall__Outputs(this);
  }
}

export class _importPartnerCall__Inputs {
  _call: _importPartnerCall;

  constructor(call: _importPartnerCall) {
    this._call = call;
  }

  get partnerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get referralCode(): string {
    return this._call.inputValues[1].value.toString();
  }

  get tradersToImport(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }
}

export class _importPartnerCall__Outputs {
  _call: _importPartnerCall;

  constructor(call: _importPartnerCall) {
    this._call = call;
  }
}

export class _importRefereesCall extends ethereum.Call {
  get inputs(): _importRefereesCall__Inputs {
    return new _importRefereesCall__Inputs(this);
  }

  get outputs(): _importRefereesCall__Outputs {
    return new _importRefereesCall__Outputs(this);
  }
}

export class _importRefereesCall__Inputs {
  _call: _importRefereesCall;

  constructor(call: _importRefereesCall) {
    this._call = call;
  }

  get referralCode(): string {
    return this._call.inputValues[0].value.toString();
  }

  get tradersToImport(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class _importRefereesCall__Outputs {
  _call: _importRefereesCall;

  constructor(call: _importRefereesCall) {
    this._call = call;
  }
}

export class _removeUncappedPartnerCall extends ethereum.Call {
  get inputs(): _removeUncappedPartnerCall__Inputs {
    return new _removeUncappedPartnerCall__Inputs(this);
  }

  get outputs(): _removeUncappedPartnerCall__Outputs {
    return new _removeUncappedPartnerCall__Outputs(this);
  }
}

export class _removeUncappedPartnerCall__Inputs {
  _call: _removeUncappedPartnerCall;

  constructor(call: _removeUncappedPartnerCall) {
    this._call = call;
  }

  get partnerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class _removeUncappedPartnerCall__Outputs {
  _call: _removeUncappedPartnerCall;

  constructor(call: _removeUncappedPartnerCall) {
    this._call = call;
  }
}

export class _upsertUncappedPartnerCall extends ethereum.Call {
  get inputs(): _upsertUncappedPartnerCall__Inputs {
    return new _upsertUncappedPartnerCall__Inputs(this);
  }

  get outputs(): _upsertUncappedPartnerCall__Outputs {
    return new _upsertUncappedPartnerCall__Outputs(this);
  }
}

export class _upsertUncappedPartnerCall__Inputs {
  _call: _upsertUncappedPartnerCall;

  constructor(call: _upsertUncappedPartnerCall) {
    this._call = call;
  }

  get partnerAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tier(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class _upsertUncappedPartnerCall__Outputs {
  _call: _upsertUncappedPartnerCall;

  constructor(call: _upsertUncappedPartnerCall) {
    this._call = call;
  }
}

export class CreateReferralCodeCall extends ethereum.Call {
  get inputs(): CreateReferralCodeCall__Inputs {
    return new CreateReferralCodeCall__Inputs(this);
  }

  get outputs(): CreateReferralCodeCall__Outputs {
    return new CreateReferralCodeCall__Outputs(this);
  }
}

export class CreateReferralCodeCall__Inputs {
  _call: CreateReferralCodeCall;

  constructor(call: CreateReferralCodeCall) {
    this._call = call;
  }

  get referralCode(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class CreateReferralCodeCall__Outputs {
  _call: CreateReferralCodeCall;

  constructor(call: CreateReferralCodeCall) {
    this._call = call;
  }
}

export class InitCall extends ethereum.Call {
  get inputs(): InitCall__Inputs {
    return new InitCall__Inputs(this);
  }

  get outputs(): InitCall__Outputs {
    return new InitCall__Outputs(this);
  }
}

export class InitCall__Inputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }
}

export class InitCall__Outputs {
  _call: InitCall;

  constructor(call: InitCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetOwnerCall extends ethereum.Call {
  get inputs(): SetOwnerCall__Inputs {
    return new SetOwnerCall__Inputs(this);
  }

  get outputs(): SetOwnerCall__Outputs {
    return new SetOwnerCall__Outputs(this);
  }
}

export class SetOwnerCall__Inputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOwnerCall__Outputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }
}

export class SetReferralCodeCall extends ethereum.Call {
  get inputs(): SetReferralCodeCall__Inputs {
    return new SetReferralCodeCall__Inputs(this);
  }

  get outputs(): SetReferralCodeCall__Outputs {
    return new SetReferralCodeCall__Outputs(this);
  }
}

export class SetReferralCodeCall__Inputs {
  _call: SetReferralCodeCall;

  constructor(call: SetReferralCodeCall) {
    this._call = call;
  }

  get referralCode(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetReferralCodeCall__Outputs {
  _call: SetReferralCodeCall;

  constructor(call: SetReferralCodeCall) {
    this._call = call;
  }
}

export class UpdateOwnerCall extends ethereum.Call {
  get inputs(): UpdateOwnerCall__Inputs {
    return new UpdateOwnerCall__Inputs(this);
  }

  get outputs(): UpdateOwnerCall__Outputs {
    return new UpdateOwnerCall__Outputs(this);
  }
}

export class UpdateOwnerCall__Inputs {
  _call: UpdateOwnerCall;

  constructor(call: UpdateOwnerCall) {
    this._call = call;
  }
}

export class UpdateOwnerCall__Outputs {
  _call: UpdateOwnerCall;

  constructor(call: UpdateOwnerCall) {
    this._call = call;
  }
}
