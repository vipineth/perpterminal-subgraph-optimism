// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ClearingHouseChanged extends ethereum.Event {
  get params(): ClearingHouseChanged__Params {
    return new ClearingHouseChanged__Params(this);
  }
}

export class ClearingHouseChanged__Params {
  _event: ClearingHouseChanged;

  constructor(event: ClearingHouseChanged) {
    this._event = event;
  }

  get clearingHouse(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class FeeRatioChanged extends ethereum.Event {
  get params(): FeeRatioChanged__Params {
    return new FeeRatioChanged__Params(this);
  }
}

export class FeeRatioChanged__Params {
  _event: FeeRatioChanged;

  constructor(event: FeeRatioChanged) {
    this._event = event;
  }

  get baseToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get feeRatio(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class InsuranceFundFeeRatioChanged extends ethereum.Event {
  get params(): InsuranceFundFeeRatioChanged__Params {
    return new InsuranceFundFeeRatioChanged__Params(this);
  }
}

export class InsuranceFundFeeRatioChanged__Params {
  _event: InsuranceFundFeeRatioChanged;

  constructor(event: InsuranceFundFeeRatioChanged) {
    this._event = event;
  }

  get feeRatio(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class MaxOrdersPerMarketChanged extends ethereum.Event {
  get params(): MaxOrdersPerMarketChanged__Params {
    return new MaxOrdersPerMarketChanged__Params(this);
  }
}

export class MaxOrdersPerMarketChanged__Params {
  _event: MaxOrdersPerMarketChanged;

  constructor(event: MaxOrdersPerMarketChanged) {
    this._event = event;
  }

  get maxOrdersPerMarket(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolAdded extends ethereum.Event {
  get params(): PoolAdded__Params {
    return new PoolAdded__Params(this);
  }
}

export class PoolAdded__Params {
  _event: PoolAdded;

  constructor(event: PoolAdded) {
    this._event = event;
  }

  get baseToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get feeRatio(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get pool(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class MarketRegistry__getMarketInfoResultValue0Struct extends ethereum.Tuple {
  get pool(): Address {
    return this[0].toAddress();
  }

  get exchangeFeeRatio(): i32 {
    return this[1].toI32();
  }

  get uniswapFeeRatio(): i32 {
    return this[2].toI32();
  }

  get insuranceFundFeeRatio(): i32 {
    return this[3].toI32();
  }
}

export class MarketRegistry extends ethereum.SmartContract {
  static bind(address: Address): MarketRegistry {
    return new MarketRegistry("MarketRegistry", address);
  }

  addPool(baseToken: Address, feeRatio: i32): Address {
    let result = super.call("addPool", "addPool(address,uint24):(address)", [
      ethereum.Value.fromAddress(baseToken),
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(feeRatio))
    ]);

    return result[0].toAddress();
  }

  try_addPool(baseToken: Address, feeRatio: i32): ethereum.CallResult<Address> {
    let result = super.tryCall("addPool", "addPool(address,uint24):(address)", [
      ethereum.Value.fromAddress(baseToken),
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(feeRatio))
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  candidate(): Address {
    let result = super.call("candidate", "candidate():(address)", []);

    return result[0].toAddress();
  }

  try_candidate(): ethereum.CallResult<Address> {
    let result = super.tryCall("candidate", "candidate():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getClearingHouse(): Address {
    let result = super.call(
      "getClearingHouse",
      "getClearingHouse():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getClearingHouse(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getClearingHouse",
      "getClearingHouse():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getFeeRatio(baseToken: Address): i32 {
    let result = super.call("getFeeRatio", "getFeeRatio(address):(uint24)", [
      ethereum.Value.fromAddress(baseToken)
    ]);

    return result[0].toI32();
  }

  try_getFeeRatio(baseToken: Address): ethereum.CallResult<i32> {
    let result = super.tryCall("getFeeRatio", "getFeeRatio(address):(uint24)", [
      ethereum.Value.fromAddress(baseToken)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getInsuranceFundFeeRatio(baseToken: Address): i32 {
    let result = super.call(
      "getInsuranceFundFeeRatio",
      "getInsuranceFundFeeRatio(address):(uint24)",
      [ethereum.Value.fromAddress(baseToken)]
    );

    return result[0].toI32();
  }

  try_getInsuranceFundFeeRatio(baseToken: Address): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getInsuranceFundFeeRatio",
      "getInsuranceFundFeeRatio(address):(uint24)",
      [ethereum.Value.fromAddress(baseToken)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getMarketInfo(
    baseToken: Address
  ): MarketRegistry__getMarketInfoResultValue0Struct {
    let result = super.call(
      "getMarketInfo",
      "getMarketInfo(address):((address,uint24,uint24,uint24))",
      [ethereum.Value.fromAddress(baseToken)]
    );

    return changetype<MarketRegistry__getMarketInfoResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getMarketInfo(
    baseToken: Address
  ): ethereum.CallResult<MarketRegistry__getMarketInfoResultValue0Struct> {
    let result = super.tryCall(
      "getMarketInfo",
      "getMarketInfo(address):((address,uint24,uint24,uint24))",
      [ethereum.Value.fromAddress(baseToken)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<MarketRegistry__getMarketInfoResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getMaxOrdersPerMarket(): i32 {
    let result = super.call(
      "getMaxOrdersPerMarket",
      "getMaxOrdersPerMarket():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_getMaxOrdersPerMarket(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getMaxOrdersPerMarket",
      "getMaxOrdersPerMarket():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getPool(baseToken: Address): Address {
    let result = super.call("getPool", "getPool(address):(address)", [
      ethereum.Value.fromAddress(baseToken)
    ]);

    return result[0].toAddress();
  }

  try_getPool(baseToken: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("getPool", "getPool(address):(address)", [
      ethereum.Value.fromAddress(baseToken)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getQuoteToken(): Address {
    let result = super.call("getQuoteToken", "getQuoteToken():(address)", []);

    return result[0].toAddress();
  }

  try_getQuoteToken(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getQuoteToken",
      "getQuoteToken():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getUniswapV3Factory(): Address {
    let result = super.call(
      "getUniswapV3Factory",
      "getUniswapV3Factory():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getUniswapV3Factory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getUniswapV3Factory",
      "getUniswapV3Factory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  hasPool(baseToken: Address): boolean {
    let result = super.call("hasPool", "hasPool(address):(bool)", [
      ethereum.Value.fromAddress(baseToken)
    ]);

    return result[0].toBoolean();
  }

  try_hasPool(baseToken: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasPool", "hasPool(address):(bool)", [
      ethereum.Value.fromAddress(baseToken)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class AddPoolCall extends ethereum.Call {
  get inputs(): AddPoolCall__Inputs {
    return new AddPoolCall__Inputs(this);
  }

  get outputs(): AddPoolCall__Outputs {
    return new AddPoolCall__Outputs(this);
  }
}

export class AddPoolCall__Inputs {
  _call: AddPoolCall;

  constructor(call: AddPoolCall) {
    this._call = call;
  }

  get baseToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get feeRatio(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class AddPoolCall__Outputs {
  _call: AddPoolCall;

  constructor(call: AddPoolCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get uniswapV3FactoryArg(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get quoteTokenArg(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetClearingHouseCall extends ethereum.Call {
  get inputs(): SetClearingHouseCall__Inputs {
    return new SetClearingHouseCall__Inputs(this);
  }

  get outputs(): SetClearingHouseCall__Outputs {
    return new SetClearingHouseCall__Outputs(this);
  }
}

export class SetClearingHouseCall__Inputs {
  _call: SetClearingHouseCall;

  constructor(call: SetClearingHouseCall) {
    this._call = call;
  }

  get clearingHouseArg(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetClearingHouseCall__Outputs {
  _call: SetClearingHouseCall;

  constructor(call: SetClearingHouseCall) {
    this._call = call;
  }
}

export class SetFeeRatioCall extends ethereum.Call {
  get inputs(): SetFeeRatioCall__Inputs {
    return new SetFeeRatioCall__Inputs(this);
  }

  get outputs(): SetFeeRatioCall__Outputs {
    return new SetFeeRatioCall__Outputs(this);
  }
}

export class SetFeeRatioCall__Inputs {
  _call: SetFeeRatioCall;

  constructor(call: SetFeeRatioCall) {
    this._call = call;
  }

  get baseToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get feeRatio(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class SetFeeRatioCall__Outputs {
  _call: SetFeeRatioCall;

  constructor(call: SetFeeRatioCall) {
    this._call = call;
  }
}

export class SetInsuranceFundFeeRatioCall extends ethereum.Call {
  get inputs(): SetInsuranceFundFeeRatioCall__Inputs {
    return new SetInsuranceFundFeeRatioCall__Inputs(this);
  }

  get outputs(): SetInsuranceFundFeeRatioCall__Outputs {
    return new SetInsuranceFundFeeRatioCall__Outputs(this);
  }
}

export class SetInsuranceFundFeeRatioCall__Inputs {
  _call: SetInsuranceFundFeeRatioCall;

  constructor(call: SetInsuranceFundFeeRatioCall) {
    this._call = call;
  }

  get baseToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get insuranceFundFeeRatioArg(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class SetInsuranceFundFeeRatioCall__Outputs {
  _call: SetInsuranceFundFeeRatioCall;

  constructor(call: SetInsuranceFundFeeRatioCall) {
    this._call = call;
  }
}

export class SetMaxOrdersPerMarketCall extends ethereum.Call {
  get inputs(): SetMaxOrdersPerMarketCall__Inputs {
    return new SetMaxOrdersPerMarketCall__Inputs(this);
  }

  get outputs(): SetMaxOrdersPerMarketCall__Outputs {
    return new SetMaxOrdersPerMarketCall__Outputs(this);
  }
}

export class SetMaxOrdersPerMarketCall__Inputs {
  _call: SetMaxOrdersPerMarketCall;

  constructor(call: SetMaxOrdersPerMarketCall) {
    this._call = call;
  }

  get maxOrdersPerMarketArg(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetMaxOrdersPerMarketCall__Outputs {
  _call: SetMaxOrdersPerMarketCall;

  constructor(call: SetMaxOrdersPerMarketCall) {
    this._call = call;
  }
}

export class SetOwnerCall extends ethereum.Call {
  get inputs(): SetOwnerCall__Inputs {
    return new SetOwnerCall__Inputs(this);
  }

  get outputs(): SetOwnerCall__Outputs {
    return new SetOwnerCall__Outputs(this);
  }
}

export class SetOwnerCall__Inputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOwnerCall__Outputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }
}

export class UpdateOwnerCall extends ethereum.Call {
  get inputs(): UpdateOwnerCall__Inputs {
    return new UpdateOwnerCall__Inputs(this);
  }

  get outputs(): UpdateOwnerCall__Outputs {
    return new UpdateOwnerCall__Outputs(this);
  }
}

export class UpdateOwnerCall__Inputs {
  _call: UpdateOwnerCall;

  constructor(call: UpdateOwnerCall) {
    this._call = call;
  }
}

export class UpdateOwnerCall__Outputs {
  _call: UpdateOwnerCall;

  constructor(call: UpdateOwnerCall) {
    this._call = call;
  }
}
